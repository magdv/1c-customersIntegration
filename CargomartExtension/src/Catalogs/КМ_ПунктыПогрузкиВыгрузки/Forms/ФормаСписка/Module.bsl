#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Владелец) Тогда
		
		Организация = Параметры.Владелец;
		Элементы.Организация.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КСинхронизировать(Команда)
	
	КСинхронизироватьНаСервере();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура КСинхронизироватьНаСервере()
	
	КМ_ОбщийМодульСервер.СинхронизацияСправочникКМ_ПунктыПогрузкиВыгрузки(Организация);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	ОтборВладелец = Неопределено;
	
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если Строка(ЭлементОтбора.ЛевоеЗначение) = "Владелец" Тогда
			
			ОтборВладелец = ЭлементОтбора;
			Прервать;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ОтборВладелец = Неопределено Тогда
		
		ОтборВладелец 				= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборВладелец.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
		
	КонецЕсли;
	
	ОтборВладелец.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ОтборВладелец.ПравоеЗначение 	= Организация;
	ОтборВладелец.Использование 	= Истина;
	
КонецПроцедуры

#КонецОбласти
